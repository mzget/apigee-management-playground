type RatePlan {
  advance: Boolean
  contractDuration: Int
  contractDurationType: String
  currency: Currency
  customPaymentTerm: Boolean
  description: String
  displayName: String
  earlyTerminationFee: Int
  frequencyDuration: Int
  frequencyDurationType: String
  id: String
  isPrivate: Boolean
  keepOriginalStartDate: Boolean
  monetizationPackage: APIPackage
  name: String
  organization: Organization
  paymentDueDays: String
  prorate: String
  published: Boolean
  ratePlanDetails: [RatePlanDetail]
  recurringFee: Int
  recurringStartUnit: Int
  recurringType: String
  setUpFee: Int
  startDate: String
  type: String
}

type RatePlanDetail {
  aggregateFreemiumCounters: Boolean
  aggregateStandardCounters: Boolean
  aggregateTransactions: Boolean
  currency: Currency
  customPaymentTerm: Boolean
  duration: Int
  durationType: String
  freemiumDuration: Int
  freemiumDurationType: String
  freemiumUnit: Int
  id: String
  meteringType: String
  organization: Organization
  paymentDueDays: String
  ratePlanRates: [RatePlanRates]
  ratingParameter: String
  revenueType: String
  type: String
}

type RatePlanRates {
  endUnit: Int
  id: String
  rate: Float
  revshare: Float
  startUnit: Int
  type: String
}

type Currency {
  id: String
  description: String
  displayName: String
  name: String
  organization: Organization
  status: String
  virtualCurrency: Boolean
}

input RatePlanInput {
  description: String!
  name: String!
  type: AudienceType!
  displayName: String!
  isPrivate: Boolean!
  published: Boolean!
  currency: ObjectInput!
  monetizationPackage: ObjectInput
  organization: ObjectInput!
  ratePlanDetails: [RatePlanDetailInput!]
  startDate: String!
  endDate: String
  earlyTerminationFee: Int
  recurringFee: Int
  setUpFee: Int
  paymentDueDays: Int
  prorate: Boolean
  frequencyDuration: Int
  frequencyDurationType: DurationType
}

input ObjectInput {
  id: String
}

input RatePlanDetailInput {
  currency: ObjectInput!
  ratePlanRates: [RatePlanRatesInput!]
  type: RatePlanType!
  meteringType: MeteringType!
  ratingParameter: String! = "VOLUME"
  ratingParameterUnit: String
  paymentDueDays: Int!
  organization: ObjectInput!
  duration: Int
  durationType: DurationType
  freemiumUnit: Int
  freemiumDuration: Int
  freemiumDurationType: DurationType
}

input RatePlanRatesInput {
  endUnit: Int
  id: String
  rate: Float
  revshare: Float
  startUnit: Int!
  type: String!
}

enum MeteringType {
  UNIT
  VOLUME
  STAIR_STEP
  DEV_SPECIFIC
}
enum RatePlanType {
  REVSHARE
  RATECARD
  REVSHARE_RATECARD
  USAGE_TARGET
}
enum AudienceType {
  STANDARD
  DEVELOPER_CATEGORY
  DEVELOPER
}
enum DurationType {
  DAY
  WEEK
  MONTH
  QUARTER
  YEAR
}
